/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Components.BaiKiemTraCard;
import Dao.*;
import Entity.*;
import service.RmiServiceLocator;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.time.LocalDateTime;
import java.util.ArrayList;

/**
 *
 * @author THANH PHU
 */
public class GV_ClassRoom_Detail extends JPanel {

    /**
     * Creates new form GV_ClassRoom_Detail
     */
    private ILopHoc_DAO lh_dao= RmiServiceLocator.getLopHocDao();
    private ITaiKhoan_DAO tk_dao= RmiServiceLocator.getTaiKhoanDao();
    private static IKetQuaHocTap_DAO kqht_dao = RmiServiceLocator.getKetQuaHocTapDao();

    private static IBaiKiemTra_DAO bkt_dao = RmiServiceLocator.getBaiKiemTraDao();
    private IMonHoc_DAO mh_dao= RmiServiceLocator.getMonHocDao();
    private IDeThi_DAO dt_dao= RmiServiceLocator.getDeThiDao();
    public static  LopHoc lopHoc;
    private static ArrayList<KetQuaHocTap> dsKQHT;
    private static ArrayList<BaiKiemTra> dsBKT;

    public GV_ClassRoom_Detail() throws RemoteException {
        initComponents();
        loadData();
        
    }
    public GV_ClassRoom_Detail(LopHoc lopHoc) throws RemoteException {
        this.lopHoc=lopHoc;
        initComponents();
        
        loadBKT();
        loadData();
        thongKeCard3.setVisible(false);
        button3.setVisible(false);
        
    }
    public void loadData(){
        
        thongKeCard1.updateCard("E74888", "885FBF","FFFFFF", dsKQHT.size()+"", "icons8-user-groups-50", "Số sinh viên", 100);
        thongKeCard2.updateCard("38419D", "52D3D8","FFFFFF", dsBKT.size()+"", "icons8-test-50", "Số bài kiểm tra", 100);
        thongKeCard3.updateCard("F3825F", "FFE26F","F66060", dsBKT.size()+"", "icons8-statistics-50", "Số bài kiểm tra", 60);
        jLabel1.setText("<html>"+lopHoc.getTenLop()+"</html>");
        jLabel1.setToolTipText(lopHoc.getTenLop());
        jLabel2.setText("Năm học: "+lopHoc.getNamHoc());
    }
    public static void loadBKT() throws RemoteException {
        dsKQHT=kqht_dao.getDanhSachKetQuaHocTap(lopHoc.getMaLop());
        dsBKT= bkt_dao.getDanhSachBaiKiemTraTheoLop(lopHoc.getMaLop());
        listBaiKiemTra1.updateList(dsBKT);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws RemoteException {

        jDialog1 = new JDialog();
        roundedPanel5 = new Components.RoundedPanel();
        jCheckBoxCustom1 = new Components.JCheckBoxCustom();
        jCheckBoxCustom2 = new Components.JCheckBoxCustom();
        jCheckBoxCustom3 = new Components.JCheckBoxCustom();
        jLabel7 = new JLabel();
        myTextField1 = new Components.MyTextField();
        jLabel8 = new JLabel();
        myTextField2 = new Components.MyTextField();
        jLabel9 = new JLabel();
        button4 = new Components.Button();
        button5 = new Components.Button();
        button6 = new Components.Button();
        jSpinner1 = new JSpinner();
        jSlider1 = new JSlider();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        jLabel12 = new JLabel();
        myPasswordField1 = new Components.MyPasswordField();
        button8 = new Components.Button();
        comboBoxSuggestion1 = new Components.ComboBoxSuggestion();
        jLabel13 = new JLabel();
        deThiCard21 = new Components.DeThiCard2();
        customDateChooser1 = new Components.CustomDateTimeChooser();
        customDateChooser2 = new Components.CustomDateTimeChooser();
        jDialog2 = new JDialog();
        listDeThi21 = new Components.ListDeThi2();
        circleBackgroundPanel1 = new Components.CircleBackgroundPanel();
        jLabel1 = new JLabel();
        button1 = new Components.Button();
        jLabel2 = new JLabel();
        button2 = new Components.Button();
        button3 = new Components.Button();
        roundedGradientPanel1 = new Components.RoundedGradientPanel();
        thongKeCard1 = new Components.ThongKeCard();
        thongKeCard2 = new Components.ThongKeCard();
        thongKeCard3 = new Components.ThongKeCard();
        roundedPanel1 = new Components.RoundedPanel();
        listBaiKiemTra1 = new Components.ListBaiKiemTra();

        jDialog1.setBackground(new java.awt.Color(255, 255, 255));
        jDialog1.setModal(true);

        roundedPanel5.setBackground(new java.awt.Color(247, 247, 247));

        jCheckBoxCustom1.setText("Cho phép xem điểm");

        jCheckBoxCustom2.setText("Cho phép xem lại");

        jCheckBoxCustom3.setText("Hiển thị đáp án");

        jLabel7.setText("Số lần làm bài:");

        myTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                myTextField1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Ngày bắt đầu:");

        myTextField2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                myTextField2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Ngày kết thúc:");

        button4.setIcon(new ImageIcon(getClass().getResource("/Image/icons8-reload-30.png"))); // NOI18N
        button4.setText("Đặt lại");
        button4.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button5.setBackground(new java.awt.Color(0, 0, 0));
        button5.setForeground(new java.awt.Color(255, 255, 255));
        button5.setText("Tạo bài kiểm tra");
        button5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button5.setPreferredSize(new java.awt.Dimension(47, 40));
        button5.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                try {
                    button5ActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        button6.setText("Chọn đề thi");
        button6.setPreferredSize(new java.awt.Dimension(61, 36));
        button6.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                try {
                    button6ActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jSpinner1.setModel(new SpinnerNumberModel(1, 1, null, 1));

        jSlider1.setMajorTickSpacing(15);
        jSlider1.setMaximum(120);
        jSlider1.setMinimum(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(30);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel10.setText("Thời gian làm bài:");

        jLabel11.setText("30 phút");

        jLabel12.setText("Mật khẩu:");

        myPasswordField1.setPreferredSize(new java.awt.Dimension(64, 40));
        myPasswordField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                myPasswordField1ActionPerformed(evt);
            }
        });

        button8.setIcon(new ImageIcon(getClass().getResource("/Image/eye_closed.png"))); // NOI18N
        button8.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        comboBoxSuggestion1.setModel(new DefaultComboBoxModel(new String[] { "0.2", "0.3", "0.5" }));

        jLabel13.setText("Hệ số:");

        deThiCard21.setOpaque(false);

        GroupLayout roundedPanel5Layout = new GroupLayout(roundedPanel5);
        roundedPanel5.setLayout(roundedPanel5Layout);
        roundedPanel5Layout.setHorizontalGroup(
            roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(button6, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
                            .addComponent(button4, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
                            .addComponent(button5, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(deThiCard21, GroupLayout.PREFERRED_SIZE, 439, GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBoxCustom3, GroupLayout.PREFERRED_SIZE, 141, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxCustom2, GroupLayout.PREFERRED_SIZE, 141, GroupLayout.PREFERRED_SIZE)
                            .addGroup(roundedPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboBoxSuggestion1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(roundedPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(myPasswordField1, GroupLayout.PREFERRED_SIZE, 195, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(button8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBoxCustom1, GroupLayout.PREFERRED_SIZE, 141, GroupLayout.PREFERRED_SIZE))
                        .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, roundedPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE))
                            .addGroup(GroupLayout.Alignment.TRAILING, roundedPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myTextField1, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE))
                            .addGroup(GroupLayout.Alignment.TRAILING, roundedPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 95, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(myTextField2, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSlider1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        roundedPanel5Layout.setVerticalGroup(
            roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel5Layout.createSequentialGroup()
                .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(roundedPanel5Layout.createSequentialGroup()
                                .addComponent(myTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(myTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGroup(roundedPanel5Layout.createSequentialGroup()
                                .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBoxCustom1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel9))
                                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jCheckBoxCustom2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)
                                        .addComponent(jCheckBoxCustom3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(comboBoxSuggestion1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                            .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jSpinner1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel11)))))))
                        .addGap(27, 27, 27)
                        .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(button8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(myPasswordField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jSlider1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addGroup(roundedPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(deThiCard21, GroupLayout.PREFERRED_SIZE, 176, GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(roundedPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(button6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(button5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        GroupLayout jDialog1Layout = new GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundedPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundedPanel5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        customDateChooser1.setTextReference(myTextField1);

        customDateChooser2.setTextReference(myTextField2);

        GroupLayout jDialog2Layout = new GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jDialog2Layout.createSequentialGroup()
                .addComponent(listDeThi21, GroupLayout.PREFERRED_SIZE, 898, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(listDeThi21, GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        circleBackgroundPanel1.setColor1(new java.awt.Color(58, 138, 125));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("jLabel1");
        jLabel1.setVerticalAlignment(SwingConstants.TOP);

        button1.setBackground(new java.awt.Color(0, 0, 0));
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setIcon(new ImageIcon(getClass().getResource("/Image/icons8-add-30.png"))); // NOI18N
        button1.setText("Tạo bài kiểm tra");
        button1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Năm học: ");

        button2.setIcon(new ImageIcon(getClass().getResource("/Image/icons8-reload-30.png"))); // NOI18N
        button2.setText("Làm mới");
        button2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                try {
                    button2ActionPerformed(evt);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        button3.setIcon(new ImageIcon(getClass().getResource("/Image/icons8-statistics-30.png"))); // NOI18N
        button3.setText("Thống kê GPA");
        button3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        button3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        GroupLayout circleBackgroundPanel1Layout = new GroupLayout(circleBackgroundPanel1);
        circleBackgroundPanel1.setLayout(circleBackgroundPanel1Layout);
        circleBackgroundPanel1Layout.setHorizontalGroup(
            circleBackgroundPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(circleBackgroundPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(button1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        circleBackgroundPanel1Layout.setVerticalGroup(
            circleBackgroundPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(circleBackgroundPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(button1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(button2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(button3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        GroupLayout roundedGradientPanel1Layout = new GroupLayout(roundedGradientPanel1);
        roundedGradientPanel1.setLayout(roundedGradientPanel1Layout);
        roundedGradientPanel1Layout.setHorizontalGroup(
            roundedGradientPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(thongKeCard1, GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(thongKeCard2, GroupLayout.PREFERRED_SIZE, 339, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(thongKeCard3, GroupLayout.PREFERRED_SIZE, 343, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        roundedGradientPanel1Layout.setVerticalGroup(
            roundedGradientPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundedGradientPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(thongKeCard3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(thongKeCard2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(thongKeCard1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        roundedPanel1.setBackground(new java.awt.Color(247, 248, 250));

        GroupLayout roundedPanel1Layout = new GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listBaiKiemTra1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listBaiKiemTra1, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(roundedGradientPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roundedPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(circleBackgroundPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(circleBackgroundPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(roundedGradientPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roundedPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void initThemBKT(){
        jCheckBoxCustom1.setSelected(false);
        jCheckBoxCustom2.setSelected(false);
        jCheckBoxCustom3.setSelected(false);
        jSpinner1.setValue(1);
        myPasswordField1.setText("");
        jSlider1.setValue(30);
        customDateChooser1.setDateTime(LocalDateTime.now());
        customDateChooser2.setDateTime(LocalDateTime.now().plusMinutes(30));
        deThiCard21.setNull();
        deThiCard21.setVisible(false);
        myPasswordField1.setEchoChar('*');
        button8.setIcon(new ImageIcon(BaiKiemTraCard.class.getResource("/Image/eye_closed.png")));
        eye=false;
    }
    private void button1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        initThemBKT();
        jDialog1.pack();
        jDialog1.setLocationRelativeTo(null);
        jDialog1.setVisible(true);
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(ActionEvent evt) throws RemoteException {//GEN-FIRST:event_button2ActionPerformed
        loadData();
        loadBKT();
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button3ActionPerformed

    private void myTextField1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_myTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myTextField1ActionPerformed

    private void myTextField2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_myTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myTextField2ActionPerformed

    private void button4ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        initThemBKT();
    }//GEN-LAST:event_button4ActionPerformed

    private void button5ActionPerformed(ActionEvent evt) throws RemoteException {//GEN-FIRST:event_button5ActionPerformed
        LocalDateTime now= LocalDateTime.now();
        if(customDateChooser1.getSelectedDateTime().isAfter(customDateChooser2.getSelectedDateTime())){
            JOptionPane.showMessageDialog(null, "Thời gian bắt đầu phải trước thời gian kết thúc");
            
        }else if(customDateChooser1.getSelectedDateTime().plusMinutes(1).isBefore(now)){
            JOptionPane.showMessageDialog(null, "Thời gian bắt đầu phải sau hiện tại 1 phút");
        }
        else if(deThiCard21.getDethi()==null){
            JOptionPane.showMessageDialog(null, "Hãy chọn đề thi cho bài kiểm tra");
        }
        else{
            BaiKiemTra newBKT= new BaiKiemTra(bkt_dao.generateMa(), 
                    customDateChooser1.getSelectedDateTime(), customDateChooser2.getSelectedDateTime(), 
                    jSlider1.getValue(), 
                    new String(myPasswordField1.getPassword()), 
                    jCheckBoxCustom1.isSelected(), jCheckBoxCustom2.isSelected(), jCheckBoxCustom3.isSelected(),
                    (int) jSpinner1.getValue(),10
                    ,Float.parseFloat(comboBoxSuggestion1.getSelectedItem().toString()),"enable",deThiCard21.getDethi(), lopHoc);
            if(bkt_dao.themBaiKiemTra(newBKT)){
                JOptionPane.showMessageDialog(null, "Thêm bài kiểm tra thành công");
                jDialog1.dispose();
                loadBKT();
            }else{
                JOptionPane.showMessageDialog(null, "Thêm bài kiểm tra thất bại");
            }
        }
            
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(ActionEvent evt) throws RemoteException {//GEN-FIRST:event_button6ActionPerformed
        MonHoc mon = mh_dao.getMonHoc(GV_ClassRoom_Detail.lopHoc.getMonHoc().getMaMonHoc());
        ArrayList<DeThi> dsDeThi = dt_dao.getDanhSachDeThiTheoMonCuaGV(Main_GUI.tk.getMaTaiKhoan(), mon.getTenMonHoc());
        listDeThi21.updateDsDeThi(dsDeThi);
        listDeThi21.getDsCard().forEach(x -> {
            x.getButton1().addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    deThiCard21.update(x.getDethi());
                    jDialog2.dispose();
                    deThiCard21.setVisible(true);
                }
            });
        });
        jDialog2.pack();
        jDialog2.setLocationRelativeTo(null);
        jDialog2.setModal(true);
        jDialog2.setVisible(true);
    }//GEN-LAST:event_button6ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        jLabel11.setText(jSlider1.getValue()+" phút");
    }//GEN-LAST:event_jSlider1StateChanged

    private void myPasswordField1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_myPasswordField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myPasswordField1ActionPerformed
    private boolean eye=false;
    private void button8ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        if(!eye){
            myPasswordField1.setEchoChar((char)0);
            button8.setIcon(new ImageIcon(BaiKiemTraCard.class.getResource("/Image/eye_open.png")));
            eye=true;

        }
        else{
            myPasswordField1.setEchoChar('*');
            button8.setIcon(new ImageIcon(BaiKiemTraCard.class.getResource("/Image/eye_closed.png")));
            eye=false;
        }
    }//GEN-LAST:event_button8ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.Button button1;
    private Components.Button button2;
    private Components.Button button3;
    private Components.Button button4;
    public static Components.Button button5;
    private Components.Button button6;
    private Components.Button button8;
    private Components.CircleBackgroundPanel circleBackgroundPanel1;
    private Components.ComboBoxSuggestion comboBoxSuggestion1;
    private Components.CustomDateTimeChooser customDateChooser1;
    private Components.CustomDateTimeChooser customDateChooser2;
    private Components.DeThiCard2 deThiCard21;
    private Components.JCheckBoxCustom jCheckBoxCustom1;
    private Components.JCheckBoxCustom jCheckBoxCustom2;
    private Components.JCheckBoxCustom jCheckBoxCustom3;
    private JDialog jDialog1;
    private JDialog jDialog2;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel2;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JSlider jSlider1;
    private JSpinner jSpinner1;
    private static Components.ListBaiKiemTra listBaiKiemTra1;
    private Components.ListDeThi2 listDeThi21;
    private Components.MyPasswordField myPasswordField1;
    private Components.MyTextField myTextField1;
    private Components.MyTextField myTextField2;
    private Components.RoundedGradientPanel roundedGradientPanel1;
    private Components.RoundedPanel roundedPanel1;
    private Components.RoundedPanel roundedPanel5;
    private Components.ThongKeCard thongKeCard1;
    private Components.ThongKeCard thongKeCard2;
    private Components.ThongKeCard thongKeCard3;
    // End of variables declaration//GEN-END:variables
}
