package GUI;

import DB.CreateDB;
import Dao.ITaiKhoan_DAO;
import Entity.TaiKhoan;
import jakarta.persistence.EntityManager;
import lombok.SneakyThrows;
import service.RmiServiceLocator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author THANH PHU
 */
public class DangNhapGUI extends JFrame {

    static EntityManager em=CreateDB.createDB();
    private ITaiKhoan_DAO taiKhoanDao = RmiServiceLocator.getTaiKhoanDao();
    private boolean eyeClick=false;
    private ImageIcon eyeIcon;
    public DangNhapGUI() throws RemoteException{
        initComponents();
        setLocationRelativeTo(null);
        ImageIcon img = new ImageIcon(getClass().getResource("/Image/favicon_1.png"));
        setIconImage(img.getImage());
        setTitle("SoloSmart - Multiple Choice App");
        
        eyeIcon=new ImageIcon(getClass().getResource("/Image/eye_closed.png"));
        jLabel5.setIcon(eyeIcon);
        jLabel5.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
              if(!eyeClick){
                  jLabel5.setIcon(new ImageIcon(getClass().getResource("/Image/eye_open.png")));
                  myPasswordField1.setEchoChar((char)0);
                  eyeClick=true;
              }
                else{
                  jLabel5.setIcon(new ImageIcon(getClass().getResource("/Image/eye_closed.png")));
                  
                  myPasswordField1.setEchoChar('*');
                  eyeClick=false;
              }
           }
            
        });
        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                   String userName = myTextField1.getText();
                   String password = new String(myPasswordField1.getPassword());

                TaiKhoan taiKhoan = null;
                try {
                    taiKhoan = taiKhoanDao.dangNhap(userName, password);
                } catch (RemoteException ex) {
                    throw new RuntimeException(ex);
                }
                if (taiKhoan == null) {
                    JOptionPane.showMessageDialog(null, "Tên đăng nhập hoặc mật khẩu không đúng!", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                }
                else {
                    Loading loading = new Loading(taiKhoan);
                    try {
                        taiKhoanDao.updateTrangThaiOnline(taiKhoan);
                    } catch (RemoteException ex) {
                        throw new RuntimeException(ex);
                    }
                    dispose();
	                loading.setVisible(true);
	                loading.setLocationRelativeTo(null);

                    TaiKhoan finalTaiKhoan = taiKhoan;
                    SwingWorker<Void, Integer> worker = new SwingWorker<Void, Integer>() {
	                    @Override
	                    protected Void doInBackground() throws Exception {
	                        for (int i = 0; i <= 100; i++) {
	                            Thread.sleep(10); 
	                            publish(i); 
	                        }
	                        return null;
	                    }

	                    @SneakyThrows
                        @Override
	                    protected void process(java.util.List<Integer> chunks) {
	                        int progressValue = chunks.get(chunks.size() - 1);
	                        loading.updateProgress(progressValue, finalTaiKhoan);
	                    }

	                    @Override
	                    protected void done() {
	                        loading.dispose();
	                    }
	                };

	                worker.execute();
//	                setVisible(false); 
                }

            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new JDialog();
        roundedPanel1 = new Components.RoundedPanel();
        myTextField2 = new Components.MyTextField();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();
        myPasswordField2 = new Components.MyPasswordField();
        jLabel7 = new JLabel();
        myPasswordField3 = new Components.MyPasswordField();
        jLabel11 = new JLabel();
        jLabel12 = new JLabel();
        jLabel13 = new JLabel();
        jLabel14 = new JLabel();
        myTextField3 = new Components.MyTextField();
        jLabel10 = new JLabel();
        jLabel15 = new JLabel();
        myTextField4 = new Components.MyTextField();
        button2 = new Components.Button();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jLabel4 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        button1 = new Components.Button();
        myPasswordField1 = new Components.MyPasswordField();
        myTextField1 = new Components.MyTextField();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();

        roundedPanel1.setBackground(new Color(58, 138, 125));

        myTextField1.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        myTextField2.setFont(new Font("Segoe UI", 1, 14)); // NOI18N

        jLabel8.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new Color(255, 255, 255));
        jLabel8.setText("Tên Đăng Nhập");

        jLabel9.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new Color(255, 255, 255));
        jLabel9.setText("Mật Khẩu Mới");
        jLabel9.setToolTipText("");

        jLabel7.setIcon(new ImageIcon(getClass().getResource("/Image/Reset password-bro.png"))); // NOI18N

        jLabel11.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new Color(255, 255, 255));
        jLabel11.setText("Nhập lại mật khẩu mới");
        jLabel11.setToolTipText("");

        jLabel12.setIcon(new ImageIcon(getClass().getResource("/Image/eye_closed.png"))); // NOI18N
        jLabel12.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });

        jLabel13.setIcon(new ImageIcon(getClass().getResource("/Image/eye_closed.png"))); // NOI18N
        jLabel13.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });

        jLabel14.setFont(new Font("Segoe UI", 1, 24)); // NOI18N
        jLabel14.setForeground(new Color(255, 255, 255));
        jLabel14.setText("Khôi Phục Mật Khẩu");

        myTextField1.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        myTextField3.setFont(new Font("Segoe UI", 1, 14)); // NOI18N

        jLabel10.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new Color(255, 255, 255));
        jLabel10.setText("Số điện thoại");

        jLabel15.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new Color(255, 255, 255));
        jLabel15.setText("Email");

        myTextField1.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        myTextField4.setFont(new Font("Segoe UI", 1, 14)); // NOI18N

        button2.setBackground(new Color(0, 0, 0));
        button2.setForeground(new Color(255, 255, 255));
        button2.setText("Đổi mật khẩu");
        button2.setFont(new Font("Segoe UI", 1, 18)); // NOI18N
        button2.setPreferredSize(new Dimension(116, 36));
        button2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        GroupLayout roundedPanel1Layout = new GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
            roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(49, 49, 49)
                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                            .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(myPasswordField3, GroupLayout.PREFERRED_SIZE, 237, GroupLayout.PREFERRED_SIZE)
                                .addComponent(myPasswordField2, GroupLayout.PREFERRED_SIZE, 237, GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jLabel12)))
                        .addGroup(GroupLayout.Alignment.TRAILING, roundedPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(182, 182, 182))
                        .addComponent(myTextField2, GroupLayout.PREFERRED_SIZE, 270, GroupLayout.PREFERRED_SIZE)
                        .addComponent(myTextField3, GroupLayout.PREFERRED_SIZE, 270, GroupLayout.PREFERRED_SIZE)
                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel10)
                                .addComponent(jLabel15)))
                        .addComponent(myTextField4, GroupLayout.PREFERRED_SIZE, 270, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, GroupLayout.PREFERRED_SIZE, 268, GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        roundedPanel1Layout.setVerticalGroup(
            roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel14, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myTextField4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myPasswordField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(myPasswordField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(button2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(roundedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout jDialog1Layout = new GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jDialog1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(roundedPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(roundedPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Solosmart");
        setLocation(new Point(0, 0));
        setResizable(false);

        jPanel1.setBackground(new Color(255, 255, 255));

        jLabel1.setIcon(new ImageIcon(getClass().getResource("/Image/Exams-bro (1).png"))); // NOI18N

        jLabel4.setIcon(new ImageIcon(getClass().getResource("/Image/logo-text_1.png"))); // NOI18N

        jLabel2.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Tên Đăng Nhập");

        jLabel3.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Mật Khẩu");
        jLabel3.setToolTipText("");

        button1.setBackground(new Color(51, 51, 51));
        button1.setForeground(new Color(255, 255, 255));
        button1.setText("Đăng Nhập");
        button1.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        button1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        myPasswordField1.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));

        myTextField1.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.BLACK));
        myTextField1.setFont(new Font("Segoe UI", 1, 14)); // NOI18N

        jLabel6.setFont(new Font("Segoe UI", 2, 12)); // NOI18N
        jLabel6.setText("Quên mật khẩu?");
        jLabel6.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(myTextField1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 157, GroupLayout.PREFERRED_SIZE)
                        .addComponent(button1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(myPasswordField1, GroupLayout.PREFERRED_SIZE, 272, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myTextField1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                            .addComponent(myPasswordField1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(30, 30, 30)
                        .addComponent(button1, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        //mo dialog
        jDialog1.pack();
        jDialog1.setLocationRelativeTo(null);
        jDialog1.setIconImage(new ImageIcon(getClass().getResource("/Image/favicon_1.png")).getImage());
        jDialog1.setVisible(true);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void button1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button1ActionPerformed
    
    private void button2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        try {
            TaiKhoan otherTK= taiKhoanDao.getTaiKhoanByName(myTextField2.getText());
            
            if(otherTK==null){
                JOptionPane.showMessageDialog(null, "Không tìm thấy tài khoản");
            }
            else if(otherTK.getTrangThai().equalsIgnoreCase("online")){
                JOptionPane.showMessageDialog(null, "Tài khoản này đang online, không thể đổi mật khẩu");
            }
            else if(taiKhoanDao.khoiPhucMatKhau(myTextField2.getText(), myTextField4.getText(), myTextField3.getText())==null){
                JOptionPane.showMessageDialog(null, "Email hoặc số điện thoại không trùng khớp");
            }
            else{
                String newMK= new String(myPasswordField2.getPassword());
                String nhapLaiMK= new String(myPasswordField3.getPassword());
                System.out.println(newMK+" "+nhapLaiMK);
                if(!newMK.equalsIgnoreCase(nhapLaiMK)){
                    JOptionPane.showMessageDialog(null, "Nhập lại mật khẩu không đúng");
                }
                else{
                    taiKhoanDao.doiMatKhau(myTextField2.getText(), newMK);
                    JOptionPane.showMessageDialog(null, "Đổi mật khẩu thành công");
                    jDialog1.setVisible(false);
                }
            }
        } catch (RemoteException ex) {
            Logger.getLogger(DangNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button2ActionPerformed
    private boolean eye1=false;
    private void jLabel13MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        if(!eye1){
            jLabel13.setIcon(new ImageIcon(getClass().getResource("/Image/eye_open.png")));
            myPasswordField2.setEchoChar((char)0);
            eye1=true;
        }
        else{
            jLabel13.setIcon(new ImageIcon(getClass().getResource("/Image/eye_closed.png")));
            myPasswordField2.setEchoChar('●');
            eye1=false;
        }
    }//GEN-LAST:event_jLabel13MouseClicked
     private boolean eye2=true;
    private void jLabel12MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        if(!eye2){
            jLabel12.setIcon(new ImageIcon(getClass().getResource("/Image/eye_open.png")));
            myPasswordField2.setEchoChar((char)0);
            eye2=true;
        }
        else{
            jLabel12.setIcon(new ImageIcon(getClass().getResource("/Image/eye_closed.png")));
            myPasswordField2.setEchoChar('●');
            eye2=false;
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DangNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(DangNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(DangNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DangNhapGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DangNhapGUI().setVisible(true);
                } catch (RemoteException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.Button button1;
    private Components.Button button2;
    private JDialog jDialog1;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel14;
    private JLabel jLabel15;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private Components.MyPasswordField myPasswordField1;
    private Components.MyPasswordField myPasswordField2;
    private Components.MyPasswordField myPasswordField3;
    private Components.MyTextField myTextField1;
    private Components.MyTextField myTextField2;
    private Components.MyTextField myTextField3;
    private Components.MyTextField myTextField4;
    private Components.RoundedPanel roundedPanel1;
    // End of variables declaration//GEN-END:variables
}
